from model import Taximetro

def display_instructions():
    print("""
    Bienvenido al sistema de taxímetro digital.
    Instrucciones:
    - Ingrese 'E' para empezar una nueva carrera.
    - Ingrese 'M' para indicar que el taxi está en movimiento.
    - Ingrese 'P' para indicar que el taxi está parado.
    - Ingrese 'F' para finalizar la carrera y mostrar el total a pagar.
    - Ingrese 'H' para ver el historial de carreras.
    - Ingrese 'Q' para salir del programa.
    """)

def main():
    display_instructions()
    taximetro = Taximetro()

    while True:
        command = input("Ingrese comando (E: Empezar nueva carrera, H: Ver historial, Q: Salir): ").upper()

        if command == 'E':
            taximetro.start()
            while True:
                sub_command = input("Ingrese comando (M: Movimiento, P: Parado, F: Finalizar carrera): ").upper()
                if sub_command == 'M':
                    taximetro.continue_road()
                elif sub_command == 'P':
                    taximetro.stop()
                elif sub_command == 'F':
                    taximetro.finish_road()
                    taximetro.clear()
                    break
                else:
                    print("Comando no válido. Intente de nuevo.")
        elif command == 'H':
            try:
                with open('rides_history.txt', 'r', encoding='utf-8') as file:
                    history = file.readlines()
                    if history:
                        print("Historial de carreras:")
                        for line in history:
                            print(line.strip())
                    else:
                        print("No hay carreras registradas.")
            except FileNotFoundError:
                print("No hay carreras registradas.")
        elif command == 'Q':
            print("Saliendo del programa. ¡Adiós!")
            break
        else:
            print("Comando no válido. Intente de nuevo.")

if __name__ == "__main__":
    main()
