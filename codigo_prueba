import time

class Taximetro:
    fare_movement = 0.05  # tarifa en movimiento en centimos de euro por segundo
    fare_stop = 0.02 #tarifa en reposo de centimos en euro por segundo

    def __init__(self):
        self.time_start = None
        self.start_road = False
        self.last_status_change = None
        self.fare_total = 0  # irá aumentando según se mueva o esté en espera después de iniciar la carrera
        self.in_movement = False
        self.start_time = None
        self.end_time = None

    def calculate_fare(self):
        now = time.time()
        time_elapsed = now - self.last_status_change
        if self.in_movement:
            self.fare_total += round(time_elapsed * self.fare_stop, 2)
        else:
            self.fare_total += round(time_elapsed * self.fare_movement, 2)
        self.last_status_change = now

    def start(self):
        print("Comenzar la carrera.")
        self.start_road = True
        self.last_status_change = time.time()
        #self.calculate_fare()

    def stop(self):
        print("El taxi se ha detenido. ")
        self.in_movement = False
        self.calculate_fare()

    def continue_road(self):   
        if self.start_road:
            self.in_movement = True
            self.calculate_fare()
            print(f"El taxi esta en movimiento.")
    
    def finish_road(self):
        self.in_movement = not self.in_movement
        self.calculate_fare()
        self.start_road = False
        print(f"La carrera ha terminado. El total a cobrar es: {self.fare_total:.2f} euros.")
        return self.fare_total

    def save_ride_history(self):
        with open('rides_history.txt', mode='a', encoding='utf-8') as file:
            file.write(f"Fecha de inicio: {self.start_time}\n")
            file.write(f"Fecha de fin: {self.end_time}\n")
            file.write(f"Total a cobrar: €{self.fare_total:.2f}\n")
            file.write("=======================================\n")

    def view_history(self):
        try:
            with open('rides_history.txt', mode='r', encoding='utf-8') as file:
                print("Historial de carreras:")
                for line in file:
                    print(line.strip())
        except FileNotFoundError:
            print("No hay carreras registradas.")
            
    def clear(self):
        self.start_road = False
        self.last_status_change = None
        self.fare_total = 0
        self.in_movement = False
        self.start_time = None
        self.end_time = None